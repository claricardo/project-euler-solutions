/*

Project Euler - Problem 1 (from https://projecteuler.net/)
Multiples of 3 and 5


If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. 
The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

*/


// Proposed solution
function multiples(limit) {
    var sum = 0;
    for(var i = 0; i < limit; i++){
        if(i % 3 === 0 || i % 5 === 0)
            sum += i;
    }
    return sum;
}

// Testing the solution
console.log("Problem #1 - Solution:");
console.log(multiples(1000));

//***********************************************************************

/*

Project Euler - Problem 2 (from https://projecteuler.net/)
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.

*/


// Proposed solution
function evenFibonacci(limit) {
    var sum = 0,
        prev = 0,
        cur = 1,
        i,
        aux;
    i = 1;
    while(cur < limit){
        aux = prev;
        prev = cur;
        cur += aux;
        if(cur % 2 === 0)
            sum += cur;
        i++;
    }
    return sum;
}


// Testing the solution
console.log("Problem #2 - Solution:");
console.log(evenFibonacci(4000000));

//***********************************************************************

/*

Project Euler - Problem 3 (from https://projecteuler.net/)
Largest prime factor

The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?

*/


// Proposed solution
function primeFactors(number) {
    var factors = [];
    var limit = Math.floor(Math.sqrt(number));
    var product = 1;
    
    for(var i = 2; i < limit; i++){
        if(number % i === 0)
        {
            product *= i;
            if (product <= number)
                factors.push(i);
            else
                break;
        }
    }
    console.log(factors);
    return factors[factors.length-1];
}


// Testing the solution
console.log("Problem #3 - Solution:");
console.log(primeFactors(600851475143));

//***********************************************************************

/*

Project Euler - Problem 4 (from https://projecteuler.net/)
Largest palindrome product

A palindromic number reads the same both ways. 
The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.

Find the largest palindrome made from the product of two 3-digit numbers.

*/


// Proposed solution
function isPalindrome(number){
    var reverse = 0,
        n = number,
        dig;
        
        if (number < 0) return false;
        while(n > 0){
            dig = n % 10;
            reverse = reverse * 10 + dig;
            n = Math.floor(n / 10);
        }
        
        return reverse == number;
}

function getLargestPalindrome(nDigits) {
    var max = -1,
        limit = Math.pow(10, nDigits),
        number = 0,
        a, b;
    
        for(var i = 1; i < limit; i++) {
            for(var j = i + 1; j < limit; j++) {
                number = i * j;  
                if(isPalindrome(number) && number > max){
                    max = number;
    				a = i;
					b = j;
				}
            }
        }
		console.log(a, b);
        return max;
}

// Testing the solution
console.log("Problem #4 - Solution:");
console.log(getLargestPalindrome(3));

//***********************************************************************

/*

Project Euler - Problem 5 (from https://projecteuler.net/)
Smallest multiple

2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?

*/

// Proposed solution
function smallestMultiple(a, b){
    
    var flag,
        n = 2520; // use n = 2520 for finding the solution in range [1,20]
    
    do {
        flag = true;
        for(var i = a; i <= b; i++){
            flag &= (n % i === 0);
            if(!flag) break;
        }
        if(flag) 
            return n;
        n++;
    } while (!flag);
    
    return -1;
}


// Testing the solution
console.log("Problem #5 - Solution:");
console.log(smallestMultiple(1,20));

//***********************************************************************

/*

Project Euler - Problem 6 (from https://projecteuler.net/)
Sum square difference

The sum of the squares of the first ten natural numbers is,

12 + 22 + ... + 102 = 385
The square of the sum of the first ten natural numbers is,

(1 + 2 + ... + 10)2 = 552 = 3025
Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.

Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.

*/

// Proposed solution
function diffSumSquares(n){
	var sum1 = 0,
		sum2 = 0;
	
    for(var i = 1; i <= n; i++){
		sum1 += i*i;
		sum2 += i;
    } 
    sum2 *= sum2;
	
	console.log(sum1, sum2);
	return sum2 - sum1;
}


// Testing the solution
console.log("Problem #6 - Solution:");
console.log(diffSumSquares(100));

//***********************************************************************
